/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
*/
package com.datamining;

import com.datamining.preprocessing.ASMNGramImpl;
import com.datamining.preprocessing.NGramCount;
import junit.framework.Assert;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;

public class ASMNGramTest {
    private final static Logger logger = LoggerFactory.getLogger(ASMNGramTest.class);

    @Test
    public void simpleASMNGramTest() {
<<<<<<< HEAD
        ASMNGramImpl twoGram = new ASMNGramImpl("/home/ankit/workspace/data-mining-sample/0A32eTdBKayjCWhZqDOQ.asm","/home/ankit/workspace/test-output/blah",2);
=======
        ASMNGramImpl twoGram = new ASMNGramImpl("/Users/lginnali/masters/data-mining/Data-mining/ms-malware-classifier/data/0A32eTdBKayjCWhZqDOQ.asm","/tmp/data",2);
>>>>>>> 6843693b04f2f46e119ecc684b4d699f08dff95b
        twoGram.buildNGram();
        int count = twoGram.getCountData().getTotal();
        twoGram.storeNGramCount();

        // loading
<<<<<<< HEAD
        ASMNGramImpl test = new ASMNGramImpl("/home/ankit/workspace/data-mining-sample/0A32eTdBKayjCWhZqDOQ.asm", "/home/ankit/workspace/test-output/blah", 2);
=======
        ASMNGramImpl test = new ASMNGramImpl("/Users/lginnali/masters/data-mining/Data-mining/ms-malware-classifier/data/0A32eTdBKayjCWhZqDOQ.asm", "/tmp/data", 2);
>>>>>>> 6843693b04f2f46e119ecc684b4d699f08dff95b
        test.loadNGram();
        Assert.assertEquals(count, test.getCountData().getTotal());
    }

    /*
        This will produce given set of grams in grams int array for each file in the location given in file
        file = /Users/lginnali/masters/data-mining/Data-mining/ms-malware-classifier/data/asm
        So you can store all the asm files in this folder and run this code to produce
        one .ngram file for each file
     */
    @Test
    public void allASMNGramTest() {
<<<<<<< HEAD
        File file = new File("/home/ankit/workspace/data-mining-sample");
=======
        File file = new File("/Users/lginnali/masters/data-mining/Data-mining/ms-malware-classifier/data/asm");
>>>>>>> 6843693b04f2f46e119ecc684b4d699f08dff95b
        int[] grams = {2,3};
        if (file.isDirectory()) {
            File[] files = file.listFiles();
            for (File asm : files) {
                for (int i = 0; i < grams.length; i++) {
                    String absolutePath = asm.getAbsolutePath();
                    String name = asm.getName();
                    ASMNGramImpl twoGram = new ASMNGramImpl(absolutePath, file.getAbsolutePath() + File.separator + name.split("\\.")[0] + "."+grams[i]+ "gram",2);
                            twoGram.buildNGram();
                    twoGram.storeNGramCount();
                    twoGram.storeNGramToCSV();
                }
            }
        }
    }
}
